<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;

/**
 * This is the base-model class for table "event_user_working_time".
 *
 * @property integer $id
 * @property integer $user_id
 * @property integer $event_id
 * @property string $start_time
 * @property string $end_time
 * @property integer $duration
 * @property string $create_time
 * @property string $update_time
 * @property integer $department_id
 * @property integer $role_id
 *
 * @property \common\models\User $user
 * @property \common\models\Event $event
 * @property \common\models\Department $department
 * @property \common\models\UserEventRole $role
 * @property \common\models\EventWorkingTimeRole[] $eventWorkingTimeRoles
 * @property \common\models\UserEventRole[] $roles
 * @property string $aliasModel
 */
abstract class EventUserWorkingTime extends \common\components\BaseActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'event_user_working_time';
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['user_id', 'event_id', 'start_time', 'end_time', 'department_id', 'type'], 'required'],
            [['user_id', 'event_id', 'duration', 'department_id', 'role_id', 'type', 'task_id'], 'integer'],
            [['start_time', 'end_time', 'create_time', 'update_time'], 'safe'],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['user_id' => 'id']],
            [['event_id'], 'exist', 'skipOnError' => true, 'targetClass' => Event::className(), 'targetAttribute' => ['event_id' => 'id']],
            [['department_id'], 'exist', 'skipOnError' => true, 'targetClass' => Department::className(), 'targetAttribute' => ['department_id' => 'id']],
            [['role_id'], 'exist', 'skipOnError' => true, 'targetClass' => UserEventRole::className(), 'targetAttribute' => ['role_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'user_id' => Yii::t('app', 'ID użytkownika'),
            'event_id' => Yii::t('app', 'ID wydarzenia'),
            'start_time' => Yii::t('app', 'Początek'),
            'end_time' => Yii::t('app', 'Koniec'),
            'duration' => Yii::t('app', 'Il. godzin'),
            'create_time' => Yii::t('app', 'Stworzono'),
            'update_time' => Yii::t('app', 'Zaktualizowano'),
            'department_id' => Yii::t('app', 'Oddział'),
            'role_id' => Yii::t('app', 'Rola'),
            'task_id'=> Yii::t('app', 'Zadanie')
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(\common\models\User::className(), ['id' => 'user_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getEvent()
    {
        return $this->hasOne(\common\models\Event::className(), ['id' => 'event_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTask()
    {
        return $this->hasOne(\common\models\Task::className(), ['id' => 'task_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDepartment()
    {
        return $this->hasOne(\common\models\Department::className(), ['id' => 'department_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getRole()
    {
        return $this->hasOne(\common\models\UserEventRole::className(), ['id' => 'role_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getEventWorkingTimeRoles()
    {
        return $this->hasMany(\common\models\EventWorkingTimeRole::className(), ['working_time_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getRoles()
    {
        return $this->hasMany(\common\models\UserEventRole::className(), ['id' => 'role_id'])->viaTable('event_working_time_role', ['working_time_id' => 'id']);
    }

    public static function getTypes()
    {
        return[
        1=>Yii::t('app', 'Pakowanie'),
        2=>Yii::t('app', 'Montaż'),
        3=>Yii::t('app', 'Event'),
        4=>Yii::t('app', 'Demontaż'),
        ];
    }


}
