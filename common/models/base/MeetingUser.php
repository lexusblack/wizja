<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;

/**
 * This is the base-model class for table "meeting_user".
 *
 * @property integer $meeting_id
 * @property integer $user_id
 *
 * @property \common\models\Meeting $meeting
 * @property \common\models\User $user
 * @property string $aliasModel
 */
abstract class MeetingUser extends \common\components\BaseActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'meeting_user';
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['meeting_id', 'user_id'], 'required'],
            [['meeting_id', 'user_id'], 'integer'],
            [['meeting_id', 'user_id'], 'unique', 'targetAttribute' => ['meeting_id', 'user_id'], 'message' => 'The combination of Meeting ID and User ID has already been taken.'],
            [['meeting_id'], 'exist', 'skipOnError' => true, 'targetClass' => Meeting::className(), 'targetAttribute' => ['meeting_id' => 'id']],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['user_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'meeting_id' => Yii::t('app', 'ID spotkania'),
            'user_id' => Yii::t('app', 'ID uÅ¼ytkownika'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getMeeting()
    {
        return $this->hasOne(\common\models\Meeting::className(), ['id' => 'meeting_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(\common\models\User::className(), ['id' => 'user_id']);
    }




}
