<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;

/**
 * This is the base-model class for table "contact".
 *
 * @property integer $id
 * @property string $first_name
 * @property string $last_name
 * @property string $phone
 * @property string $email
 * @property string $position
 * @property string $info
 * @property integer $customer_id
 * @property string $photo
 * @property string $create_time
 * @property string $update_time
 * @property integer $type
 * @property integer $status
 *
 * @property \common\models\CalendarUserFilter[] $calendarUserFilters
 * @property \common\models\Customer $customer
 * @property \common\models\Event[] $events
 * @property \common\models\Meeting[] $meetings
 * @property \common\models\Offer[] $offers
 * @property \common\models\Rent[] $rents
 * @property string $aliasModel
 */
abstract class Contact extends \common\components\BaseActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'contact';
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['last_name', 'customer_id'], 'required'],
            [['info'], 'string'],
            [['customer_id', 'type', 'status'], 'integer'],
            [['create_time', 'update_time'], 'safe'],
            [['first_name', 'last_name', 'phone', 'email', 'position', 'photo'], 'string', 'max' => 255],
            [['customer_id'], 'exist', 'skipOnError' => true, 'targetClass' => Customer::className(), 'targetAttribute' => ['customer_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'first_name' => Yii::t('app', 'ImiÄ™'),
            'last_name' => Yii::t('app', 'Nazwisko'),
            'phone' => Yii::t('app', 'Telefon'),
            'email' => Yii::t('app', 'Adres e-mail'),
            'position' => Yii::t('app', 'Stanowisko'),
            'info' => Yii::t('app', 'Informacje'),
            'customer_id' => Yii::t('app', 'Klient'),
            'photo' => Yii::t('app', 'ZdjÄ™cie'),
            'create_time' => Yii::t('app', 'Stworzono'),
            'update_time' => Yii::t('app', 'Zaktualizowano'),
            'type' => Yii::t('app', 'Typ'),
            'status' => Yii::t('app', 'Status'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCalendarUserFilters()
    {
        return $this->hasMany(\common\models\CalendarUserFilter::className(), ['contact' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCustomer()
    {
        return $this->hasOne(\common\models\Customer::className(), ['id' => 'customer_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getEvents()
    {
        return $this->hasMany(\common\models\Event::className(), ['contact_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getMeetings()
    {
        return $this->hasMany(\common\models\Meeting::className(), ['contact_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getOffers()
    {
        return $this->hasMany(\common\models\Offer::className(), ['contact_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getRents()
    {
        return $this->hasMany(\common\models\Rent::className(), ['contact_id' => 'id']);
    }




}
