<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;

/**
 * This is the base-model class for table "calendar_user_filter".
 *
 * @property integer $id
 * @property integer $user_id
 * @property string $type
 * @property integer $manager_id
 * @property integer $coordinator
 * @property integer $department
 * @property integer $contact
 * @property integer $customer
 * @property string $projectStatus
 * @property integer $rentStatus
 *
 * @property \common\models\User $manager
 * @property \common\models\User $user
 * @property \common\models\User $user_filter
 * @property \common\models\Department $department0
 * @property \common\models\Contact $contact0
 * @property \common\models\Customer $customer0
 * @property string $aliasModel
 */
abstract class CalendarUserFilter extends \common\components\BaseActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'calendar_user_filter';
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['user_id'], 'required'],
            [['user_id', 'manager_id', 'coordinator', 'department', 'contact', 'customer'], 'integer'],
            [['type', 'projectStatus', 'rentStatus'], 'string', 'max' => 255],
            [['manager_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['manager_id' => 'id']],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['user_id' => 'id']],
            [['user_filter'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['user_filter' => 'id']],
            [['department'], 'exist', 'skipOnError' => true, 'targetClass' => Department::className(), 'targetAttribute' => ['department' => 'id']],
            [['contact'], 'exist', 'skipOnError' => true, 'targetClass' => Contact::className(), 'targetAttribute' => ['contact' => 'id']],
            [['customer'], 'exist', 'skipOnError' => true, 'targetClass' => Customer::className(), 'targetAttribute' => ['customer' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'user_id' => Yii::t('app', 'ID użytkownika'),
            'type' => Yii::t('app', 'Typ'),
            'manager_id' => Yii::t('app', 'ID managera'),
            'coordinator' => Yii::t('app', 'Koordynator'),
            'department' => Yii::t('app', 'Oddział'),
            'contact' => Yii::t('app', 'Kontakt'),
            'customer' => Yii::t('app', 'Klient'),
            'projectStatus' => Yii::t('app', 'Status projektu'),
            'rentStatus' => Yii::t('app', 'Status wypożyczenia'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getManager()
    {
        return $this->hasOne(\common\models\User::className(), ['id' => 'manager_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(\common\models\User::className(), ['id' => 'user_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUserFilter()
    {
        return $this->hasOne(\common\models\User::className(), ['id' => 'user_filter']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDepartment0()
    {
        return $this->hasOne(\common\models\Department::className(), ['id' => 'department']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getContact0()
    {
        return $this->hasOne(\common\models\Contact::className(), ['id' => 'contact']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCustomer0()
    {
        return $this->hasOne(\common\models\Customer::className(), ['id' => 'customer']);
    }




}
