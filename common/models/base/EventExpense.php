<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "event_expense".
 *
 * @property integer $id
 * @property integer $event_id
 * @property string $name
 * @property integer $department_id
 * @property string $section
 * @property string $amount
 * @property string $amount_customer
 * @property string $profit
 * @property string $invoice_nr
 * @property integer $customer_id
 * @property integer $status
 * @property integer $type
 * @property string $create_time
 * @property string $update_time
 * @property integer $group_id
 * @property string $group_amount
 * @property string $group_amount_customer
 * @property string $start_time
 * @property string $end_time
 * @property string $info
 * @property integer $expense_id
 * @property integer $creator_id
 *
 * @property \common\models\Event $event
 * @property \common\models\Department $department
 * @property \common\models\Customer $customer
 * @property \common\models\Expense $expense
 * @property \common\models\User $creator
 * @property \common\models\ExpenseContent[] $expenseContents
 * @property \common\models\ExpenseContentRate[] $expenseContentRates
 * @property string $aliasModel
 */
abstract class EventExpense extends \common\components\BaseActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'event_expense';
    }


    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => BlameableBehavior::className(),
                'createdByAttribute' => 'creator_id',
                'updatedByAttribute' => false,
            ],
            'timestamp' => [
                'class' => TimestampBehavior::className(),
                'createdAtAttribute' => 'create_time',
                'updatedAtAttribute' => 'update_time',
                'value' => date('Y-m-d H:i:s'),
            ],
        ];
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['event_id', 'name'], 'required'],
            [['event_id', 'department_id', 'customer_id', 'status', 'type', 'group_id', 'expense_id'], 'integer'],
            [['amount', 'amount_customer', 'profit', 'group_amount', 'group_amount_customer'], 'number'],
            [['create_time', 'update_time', 'start_time', 'end_time'], 'safe'],
            [['info'], 'string'],
            [['name', 'section', 'invoice_nr'], 'string', 'max' => 255],
            [['event_id'], 'exist', 'skipOnError' => true, 'targetClass' => Event::className(), 'targetAttribute' => ['event_id' => 'id']],
            [['department_id'], 'exist', 'skipOnError' => true, 'targetClass' => Department::className(), 'targetAttribute' => ['department_id' => 'id']],
            [['customer_id'], 'exist', 'skipOnError' => true, 'targetClass' => Customer::className(), 'targetAttribute' => ['customer_id' => 'id']],
            [['expense_id'], 'exist', 'skipOnError' => true, 'targetClass' => Expense::className(), 'targetAttribute' => ['expense_id' => 'id']],
            [['creator_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['creator_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'event_id' => Yii::t('app', 'Wydarzenie'),
            'name' => Yii::t('app', 'Nazwa'),
            'department_id' => Yii::t('app', 'DziaÅ‚'),
            'section' => Yii::t('app', 'Sekcja'),
            'amount' => Yii::t('app', 'Kwota netto'),
            'amount_customer' => Yii::t('app', 'Kwota dla klienta'),
            'profit' => Yii::t('app', 'Zysk'),
            'invoice_nr' => Yii::t('app', 'Nr faktury'),
            'customer_id' => Yii::t('app', 'Firma'),
            'status' => Yii::t('app', 'Status'),
            'type' => Yii::t('app', 'Typ'),
            'create_time' => Yii::t('app', 'Stworzono'),
            'update_time' => Yii::t('app', 'Zaktualizowano'),
            'group_id' => Yii::t('app', 'ID grupy'),
            'group_amount' => Yii::t('app', 'Liczba grup'),
            'group_amount_customer' => Yii::t('app', 'Liczba grup klienta'),
            'start_time' => Yii::t('app', 'PoczÄ…tek'),
            'end_time' => Yii::t('app', 'Koniec'),
            'info' => Yii::t('app', 'Uwagi'),
            'expense_id' => Yii::t('app', 'Faktura'),
            'creator_id' => Yii::t('app', 'DodaÅ‚'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getEvent()
    {
        return $this->hasOne(\common\models\Event::className(), ['id' => 'event_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDepartment()
    {
        return $this->hasOne(\common\models\Department::className(), ['id' => 'department_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCustomer()
    {
        return $this->hasOne(\common\models\Customer::className(), ['id' => 'customer_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getExpense()
    {
        return $this->hasOne(\common\models\Expense::className(), ['id' => 'expense_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTask()
    {
        return $this->hasOne(\common\models\Task::className(), ['id' => 'task_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCreator()
    {
        return $this->hasOne(\common\models\User::className(), ['id' => 'creator_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getExpenseContents()
    {
        return $this->hasMany(\common\models\ExpenseContent::className(), ['event_expense_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getExpenseContentRates()
    {
        return $this->hasMany(\common\models\ExpenseContentRate::className(), ['event_expense_id' => 'id']);
    }




}
