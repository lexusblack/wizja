<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;

/**
 * This is the base-model class for table "gear".
 *
 * @property integer $id
 * @property string $name
 * @property integer $quantity
 * @property integer $available
 * @property string $brightness
 * @property string $power_consumption
 * @property integer $status
 * @property integer $type
 * @property integer $category_id
 * @property string $width
 * @property string $height
 * @property string $volume
 * @property string $depth
 * @property string $weight
 * @property string $weight_case
 * @property string $info
 * @property string $photo
 * @property integer $group_id
 * @property string $create_time
 * @property string $update_time
 * @property string $price
 * @property integer $no_items
 * @property integer $sort_order
 * @property integer $active
 *
 * @property \common\models\GearCategory $category
 * @property \common\models\GearGroup $group
 * @property \common\models\GearAttachment[] $gearAttachments
 * @property \common\models\GearHistory[] $gearHistories
 * @property \common\models\GearItem[] $gearItems
 * @property \common\models\OfferGear[] $offerGears
 * @property \common\models\Offer[] $offers
 * @property string $aliasModel
 */
abstract class Gear extends \common\components\BaseActiveRecord
{

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'gear';
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name', 'category_id'], 'required'],
            [['quantity', 'available', 'status', 'type', 'category_id', 'group_id', 'no_items', 'sort_order', 'active', 'visible_in_offer', 'visible_in_warehouse', 'min_quantity', 'max_quantity', 'packing', 'conflict_outcome'], 'integer'],
            [[ 'power_consumption', 'width', 'height', 'volume', 'depth', 'width_case', 'height_case', 'volume_case', 'depth_case', 'weight', 'weight_case', 'price', 'value'], 'number'],
            [['brightness', 'info', 'warehouse', 'location', 'info2', 'unit', 'offer_description', 'code'], 'string'],
            [['create_time', 'update_time'], 'safe'],
            [['name', 'photo'], 'string', 'max' => 255],
            [['category_id'], 'exist', 'skipOnError' => true, 'targetClass' => GearCategory::className(), 'targetAttribute' => ['category_id' => 'id']],
            [['group_id'], 'exist', 'skipOnError' => true, 'targetClass' => GearGroup::className(), 'targetAttribute' => ['group_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'name' => Yii::t('app', 'Nazwa'),
            'quantity' => Yii::t('app', 'Sztuk na stanie'),
            'available' => Yii::t('app', 'Dostępnych'),
            'brightness' => Yii::t('app', 'Jasność'),
            'power_consumption' => Yii::t('app', 'Pobór prądu [W]'),
            'status' => Yii::t('app', 'Status'),
            'type' => Yii::t('app', 'Typ'),
            'category_id' => Yii::t('app', 'Kategoria'),
            'packing' => Yii::t('app', 'Pakowanie w case'),
            'width' => Yii::t('app', 'Szerokość [cm]'),
            'height' => Yii::t('app', 'Wysokość [cm]'),
            'volume' => Yii::t('app', 'Objętość [m3]'),
            'depth' => Yii::t('app', 'Głębokość [cm]'),
            'weight' => Yii::t('app', 'Waga [kg]'),
            'weight_case' => Yii::t('app', 'Waga case netto [kg]'),
            'width_case' => Yii::t('app', 'Szerokość case [cm]'),
            'height_case' => Yii::t('app', 'Wysokość case [cm]'),
            'volume_case' => Yii::t('app', 'Objętość case [m3]'),
            'depth_case' => Yii::t('app', 'Głębokość case [cm]'),
            'info' => Yii::t('app', 'Info'),
            'photo' => Yii::t('app', 'Zdjęcie'),
            'group_id' => Yii::t('app', 'Zestaw'),
            'create_time' => Yii::t('app', 'Stworzono'),
            'update_time' => Yii::t('app', 'Zaktualizowano'),
            'price' => Yii::t('app', 'Cena'),
            'no_items' => Yii::t('app', 'Brak egzemplarzy'),
            'sort_order' => Yii::t('app', 'Kolejność sortowania'),
            'visible_in_offer' => Yii::t('app', 'Widoczny w ofercie'),
            'visible_in_warehouse' => Yii::t('app', 'Widoczny w magazynie'),
            'value'=>Yii::t('app', 'Wartość'),
            'warehouse'=>Yii::t('app', 'Magazyn'),
            'location'=>Yii::t('app', 'Miejsce w magazynie'),
            'info2'=>Yii::t('app', 'Uwagi'),
            'unit'=>Yii::t('app', 'Jednostka'),
            'type'=> Yii::t('app', 'Typ'),
            'min_quantity'=> Yii::t('app', 'Minimalny stan magazynowy'),
            'max_quantity'=> Yii::t('app', 'Maksymalny stan magazynowy'),
            'offer_description'=> Yii::t('app', 'Opis do oferty'),
            'code'=>Yii::t('app', 'Własny kod kreskowy'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCategory()
    {
        return $this->hasOne(\common\models\GearCategory::className(), ['id' => 'category_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getGroup()
    {
        return $this->hasOne(\common\models\GearGroup::className(), ['id' => 'group_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getGearAttachments()
    {
        return $this->hasMany(\common\models\GearAttachment::className(), ['gear_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getGearFavorite()
    {
        return $this->hasOne(\common\models\GearFavorite::className(), ['gear_id' => 'id'])->andWhere(['user_id'=>Yii::$app->user->id]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPrices()
    {
        return $this->hasMany(\common\models\GearPrice::className(), ['gear_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getGearHistories()
    {
        return $this->hasMany(\common\models\GearHistory::className(), ['gear_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getGearItems()
    {
        return $this->hasMany(\common\models\GearItem::className(), ['gear_id' => 'id'])->where(['active'=>1])->orderBy(['number'=>SORT_ASC]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getOfferGears()
    {
        return $this->hasMany(\common\models\OfferGear::className(), ['gear_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getOffers()
    {
        return $this->hasMany(\common\models\Offer::className(), ['id' => 'offer_id'])->viaTable('offer_gear', ['gear_id' => 'id']);
    }

        /**
     * @return \yii\db\ActiveQuery
     */
    public function getGearConnecteds()
    {
        return $this->hasMany(\common\models\GearConnected::className(), ['gear_id' => 'id']);
    }        /**
     * @return \yii\db\ActiveQuery
     */
    public function getGearPurchases()
    {
        return $this->hasMany(\common\models\GearPurchase::className(), ['gear_id' => 'id']);
    }

    public function getGearTranslates()
    {
        return $this->hasMany(\common\models\GearTranslate::className(), ['gear_id' => 'id']);
    }
        /**
     * @return \yii\db\ActiveQuery
     */
    public function getGearOuterConnecteds()
    {
        return $this->hasMany(\common\models\GearOuterConnected::className(), ['gear_id' => 'id']);
    }
        /**
     * @return \yii\db\ActiveQuery
     */
    public function getGearSimilars()
    {
        return $this->hasMany(\common\models\GearSimilar::className(), ['gear_id' => 'id']);
    }
        /**
     * @return \yii\db\ActiveQuery
     */
    public function getGearMovements()
    {
        return $this->hasMany(\common\models\GearMovement::className(), ['gear_id' => 'id']);
    }
        /**
     * @return \yii\db\ActiveQuery
     */
    public function getGearsPrices()
    {
        return $this->hasMany(\common\models\GearsPrice::className(), ['gear_id' => 'id']);
    }

        /**
     * @return \yii\db\ActiveQuery
     */
    public function getEventGears()
    {
        return $this->hasMany(\common\models\EventGear::className(), ['gear_id' => 'id']);
    }
        /**
     * @return \yii\db\ActiveQuery
     */
    public function getRentGears()
    {
        return $this->hasMany(\common\models\RentGear::className(), ['gear_id' => 'id']);
    }

    public function getWarehouseQuantities()
    {
        return $this->hasMany(\common\models\WarehouseQuantity::className(), ['gear_id' => 'id']);
    }

    public function getTypeList()
    {
        return [1=>Yii::t('app', 'Sprzęt'),2=>Yii::t('app', 'Usługa'),3=>Yii::t('app', 'Materiał eksploatacyjny magazynowany')];
    }


    public static function getTranslateName($id, $language, $name)
    {
        if (!$language)
            return $name;
        $translate = GearTranslate::find()->where(['language_id'=>$language])->andWhere(['gear_id'=>$id])->one();
        if ($translate)
            return $translate->name;
        else
            return $name;
    }

    public static function getTranslateDesc($id, $language, $name)
    {
        if (!$language)
            return $name;
        $translate = GearTranslate::find()->where(['language_id'=>$language])->andWhere(['gear_id'=>$id])->one();
        if ($translate)
            return $translate->info;
        else
            return $name;
    }
}
