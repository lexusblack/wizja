<?php
namespace backend\models;

use yii\base\Model;
use common\helpers\ArrayHelper;
use Yii;

class SendMeetingMail extends Model
{
    public $meeting;

    public $subject;
    public $text;

    public $email;
    public $recipients = [];


    public function rules()
    {
        return [
            [['subject', 'text', 'email'], 'string'],
            [['subject',], 'required'],
	        [['recipients'], 'each', 'rule'=>['email']],

        ];
    }

        public function attributeLabels()
    {
        $labels = [
            'subject' => Yii::t('app', 'Temat'),
            'text' => Yii::t('app', 'Treść'),
	        'recipients' => Yii::t('app', 'Adresaci'),
        ];

        return array_merge(parent::attributeLabels(), $labels);
    }

    public function getRecipientsList()
    {
    	$data = [];
        $teams = $this->meeting->getAssignedUsers();
        foreach ($teams->getModels() as $team){
            $data[$team->email] = $team->email;
        }
        if (isset($this->meeting->contact))
        {
            $data[$this->meeting->contact->email] = $this->meeting->contact->email;
        }

	    return $data;
    }

    public function beforeValidate() {

        if(empty($this->email)==false)
	    {
            
            $recipients = explode(";",str_replace(" ", "", str_replace(",", ";", $this->email)));
	    	if (empty($this->recipients))
            {
                $this->recipients = array();
            }
            foreach ($recipients as $r)
            {
                $this->recipients[] = $r;
            }
            
	    }

	    if (empty($this->email) && empty($this->recipients))
	    {
	    	$this->addError('email', Yii::t('app', 'Brak adresata'));
	    }
	    return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }
}